{"version":3,"sources":["app.js","mdlComponentHandler.js","button.js","checkbox.js","icon-toggle.js","menu.js","progress.js","radio.js","slider.js","spinner.js","switch.js","tabs.js","textfield.js","tooltip.js","layout.js","data-table.js","ripple.js","main.js"],"names":["MapApp","filterVenues","venueName","search","self","filterQuery","toLowerCase","venues","forEach","venue","name","indexOf","visible","marker","setMap","map","initializeMap","elementId","google","maps","Map","document","getElementById","disableDefaultUI","zoom","infoWindow","InfoWindow","close","isInfoWindowOpen","getMap","updateInfoWindow","info","setContent","open","toggleBounce","getAnimation","setAnimation","Animation","BOUNCE","clearMapMarkerAnimations","exceptThisMarker","markers","addMapMarker","Marker","position","location","title","draggable","animation","DROP","bounds","extend","fitBounds","event","addListener","selectVenue","push","Venue","this","lat","lng","website","ko","observable","window","LatLngBounds","observableArray","currentVenue","ironAjax","subscribe","selectedVenue","index","numberOfVenues","length","isSelected","foursquareRequest","url","params","client_id","client_secret","v","ll","query","limit","initialize","addEventListener","e","responseVenues","lastResponse","response","setCenter","getCenter","alert","detail","request","status","statusText","generateRequest","applyBindings","componentHandler","upgradeDom","optJsClass","optCssClass","upgradeElement","element","upgradeElements","elements","upgradeAllRegistered","registerUpgradedCallback","jsClass","callback","register","config","downgradeElements","nodes","findRegisteredClass_","optReplace","i","registeredComponents_","className","getUpgradedListOfElement_","dataUpgraded","getAttribute","split","isElementUpgraded_","upgradedList","upgradeDomInternal","cssClass","registeredClass","querySelectorAll","n","upgradeElementInternal","Element","Error","classesToUpgrade","classList","component","contains","setAttribute","join","instance","classConstructor","componentConfigProperty_","createdComponents_","j","m","callbacks","widget","ev","CustomEvent","Event","bubbles","cancelable","createEvent","initEvent","dispatchEvent","upgradeElementsInternal","Array","isArray","item","prototype","slice","call","HTMLElement","children","registerInternal","widgetMissing","newConfig","constructor","classAsString","hasOwnProperty","found","registerUpgradedCallbackInternal","regClass","upgradeAllRegisteredInternal","deconstructComponentInternal","componentIndex","splice","upgrades","element_","componentPlace","downgradeNodesInternal","downgradeNode","node","filter","NodeList","Node","ComponentConfigPublic","ComponentConfig","Component","createElement","documentElement","add","MaterialButton","init","Constant_","CssClasses_","RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","blurHandler_","blur","disable","disabled","enable","rippleContainer","rippleElement_","appendChild","boundRippleBlurHandler","bind","boundButtonBlurHandler","MaterialCheckbox","TINY_TIMEOUT","INPUT","BOX_OUTLINE","FOCUS_HELPER","TICK_OUTLINE","RIPPLE_IGNORE_EVENTS","RIPPLE_CENTER","IS_FOCUSED","IS_DISABLED","IS_CHECKED","IS_UPGRADED","onChange_","updateClasses_","onFocus_","onBlur_","remove","onMouseUp_","blur_","checkDisabled","checkToggleState","setTimeout","inputElement_","checked","check","uncheck","querySelector","boxOutline","tickContainer","tickOutline","rippleContainerElement_","boundRippleMouseUp","ripple","boundInputOnChange","boundInputOnFocus","boundInputOnBlur","boundElementMouseUp","MaterialIconToggle","JS_RIPPLE_EFFECT","boundElementOnMouseUp","MaterialMenu","TRANSITION_DURATION_SECONDS","TRANSITION_DURATION_FRACTION","CLOSE_TIMEOUT","Keycodes_","ENTER","ESCAPE","SPACE","UP_ARROW","DOWN_ARROW","CONTAINER","OUTLINE","ITEM","ITEM_RIPPLE_CONTAINER","IS_VISIBLE","IS_ANIMATING","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNALIGNED","container","parentElement","insertBefore","removeChild","container_","outline","outline_","forElId","forEl","forElement_","handleForClick_","handleForKeyboardEvent_","items","boundItemKeydown_","handleItemKeyboardEvent_","boundItemClick_","handleItemClick_","tabIndex","evt","rect","getBoundingClientRect","forRect","style","right","top","offsetTop","offsetHeight","left","offsetLeft","bottom","toggle","keyCode","preventDefault","focus","currentIndex","target","MouseEvent","click","hide","hasAttribute","stopPropagation","closing_","applyClip_","height","width","clip","removeAnimationEndListener_","addAnimationEndListener_","show","transitionDuration","itemDelay","transitionDelay","requestAnimationFrame","parentNode","removeEventListener","removeProperty","MaterialProgress","INDETERMINATE_CLASS","setProgress","p","progressbar_","setBuffer","bufferbar_","auxbar_","el","MaterialRadio","JS_RADIO","RADIO_BTN","RADIO_OUTER_CIRCLE","RADIO_INNER_CIRCLE","radios","getElementsByClassName","button","btnElement_","onMouseup_","boundChangeHandler_","boundFocusHandler_","boundBlurHandler_","boundMouseUpHandler_","outerCircle","innerCircle","MaterialSlider","isIE_","navigator","msPointerEnabled","IE_CONTAINER","SLIDER_CONTAINER","BACKGROUND_FLEX","BACKGROUND_LOWER","BACKGROUND_UPPER","IS_LOWEST_VALUE","onInput_","updateValueStyles_","onContainerMouseDown_","newEvent","buttons","clientX","clientY","y","fraction","value","min","max","backgroundLower_","flex","webkitFlex","backgroundUpper_","change","containerIE","backgroundFlex","boundInputHandler","boundChangeHandler","boundMouseUpHandler","boundContainerMouseDownHandler","MaterialSpinner","MDL_SPINNER_LAYER_COUNT","MDL_SPINNER_LAYER","MDL_SPINNER_CIRCLE_CLIPPER","MDL_SPINNER_CIRCLE","MDL_SPINNER_GAP_PATCH","MDL_SPINNER_LEFT","MDL_SPINNER_RIGHT","createLayer","layer","leftClipper","gapPatch","rightClipper","circleOwners","circle","stop","start","MaterialSwitch","TRACK","THUMB","on","off","track","thumb","focusHelper","boundFocusHandler","boundBlurHandler","MaterialTab","tab","ctx","MDL_JS_RIPPLE_EFFECT","MDL_RIPPLE_CONTAINER","MDL_RIPPLE","href","panel","resetTabState_","resetPanelState_","ACTIVE_CLASS","MaterialTabs","TAB_CLASS","PANEL_CLASS","UPGRADED_CLASS","MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS","initTabs_","tabs_","panels_","k","MaterialTextfield","maxRows","NO_MAX_ROWS","MAX_ROWS_ATTRIBUTE","LABEL","IS_DIRTY","IS_INVALID","HAS_PLACEHOLDER","onKeyDown_","currentRowCount","onReset_","checkValidity","checkDirty","checkFocus","input_","Boolean","validity","valid","label_","parseInt","isNaN","boundUpdateClassesHandler","boundResetHandler","boundKeyDownHandler","invalid","MaterialTooltip","IS_ACTIVE","BOTTOM","LEFT","RIGHT","TOP","handleMouseEnter_","props","marginLeft","offsetWidth","marginTop","handleMouseLeave_","boundMouseEnterHandler","boundMouseLeaveHandler","MaterialLayoutTab","tabs","panels","layout","selectTab","content_","tabBar_","charAt","MaterialLayout","MAX_WIDTH","TAB_SCROLL_PIXELS","RESIZE_TIMEOUT","MENU_ICON","CHEVRON_LEFT","CHEVRON_RIGHT","Mode_","STANDARD","SEAMED","WATERFALL","SCROLL","HEADER","DRAWER","CONTENT","DRAWER_BTN","ICON","HEADER_SEAMED","HEADER_WATERFALL","HEADER_SCROLL","FIXED_HEADER","OBFUSCATOR","TAB_BAR","TAB_CONTAINER","TAB","TAB_BAR_BUTTON","TAB_BAR_LEFT_BUTTON","TAB_BAR_RIGHT_BUTTON","PANEL","HAS_DRAWER","HAS_TABS","HAS_SCROLLING_HEADER","CASTING_SHADOW","IS_COMPACT","IS_SMALL_SCREEN","IS_DRAWER_OPEN","ON_LARGE_SCREEN","ON_SMALL_SCREEN","contentScrollHandler_","header_","headerVisible","scrollTop","keyboardEventHandler_","drawer_","toggleDrawer","screenSizeHandler_","screenSizeMediaQuery_","matches","obfuscator_","drawerToggleHandler_","type","headerTransitionEndHandler_","headerClickHandler_","tabBar","drawerButton","focusedElement","directChildren","childNodes","numChildren","c","child","persisted","overflowY","mode","drawerButtonIcon","innerHTML","firstChild","obfuscator","matchMedia","tabContainer","leftButton","leftButtonIcon","textContent","scrollLeft","rightButton","rightButtonIcon","tabUpdateHandler","scrollWidth","windowResizeHandler","resizeTimeoutId_","clearTimeout","MaterialDataTable","DATA_TABLE","SELECTABLE","SELECT_ELEMENT","IS_SELECTED","selectRow_","checkbox","row","opt_rows","createCheckbox_","label","labelClasses","firstHeader","bodyRows","footRows","rows","concat","th","headerCheckbox","firstCell","td","nodeName","toUpperCase","rowCheckbox","MaterialRipple","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","RIPPLE_EFFECT_IGNORE_EVENTS","downHandler_","boundHeight","boundWidth","rippleSize_","Math","sqrt","ignoringMouseDown_","frameCount","getFrameCount","setFrameCount","x","bound","currentTarget","round","touches","setRippleXY","setRippleStyles","animFrameHandler","upHandler_","recentering","frameCount_","x_","y_","boundDownHandler","boundUpHandler","fC","getRippleElement","newX","newY","transformString","scale","size","offset","webkitTransform","msTransform","transform","isLocalhost","hostname","match","protocol","serviceWorker","then","registration","update","onupdatefound","controller","installingWorker","installing","onstatechange","state","console","error"],"mappings":"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","file":"main.min.js","sourcesContent":["/**\n * Created by Rusty on 4/19/2016.\n */\n\n'use strict';\n\n/**\n * Constructor function for the map application\n * @constructor\n */\nfunction MapApp() { // eslint-disable-line no-unused-vars\n  var self = this;\n  self.window = null;\n  self.document = null;\n  self.map = null;\n  self.bounds = new google.maps.LatLngBounds();\n  self.venues = ko.observableArray();\n  self.currentVenue = ko.observable();\n  self.markers = [];\n  self.infoWindow = null;\n  self.ironAjax = null;\n  self.filterQuery = ko.observable('');\n  self.filterQuery.subscribe(filterVenues);\n\n  /**\n   * Filter venue list view\n   */\n  function filterVenues() {\n    var venueName;\n    var search = self.filterQuery().toLowerCase();\n\n    self.venues().forEach(function (venue) {\n      venueName = venue.name.toLowerCase();\n\n      if (venueName.indexOf(search) >= 0) {\n        venue.visible(true);\n        venue.marker.setMap(self.map);\n      } else {\n        venue.visible(false);\n        venue.marker.setMap(null);\n      }\n    });\n  }\n\n  /**\n   * Initialize the google map\n   * @param {object} elementId - HTML element to attach the map to\n   */\n  function initializeMap(elementId) {\n    self.map = new google.maps.Map(self.document.getElementById(elementId), {\n      disableDefaultUI: true,\n      zoom: 11\n    });\n\n    // create info window used for all map markers\n    self.infoWindow = new google.maps.InfoWindow({map: self.map});\n    self.infoWindow.close();\n  }\n\n  /**\n   * Select a venue, and update its map marker and info window\n   * @param {Venue} selectedVenue - the venue that has been selected\n   */\n  self.selectVenue = function (selectedVenue) {\n    var index;\n    var venue;\n    var numberOfVenues = self.venues().length;\n\n    // check if the selected venue is already selected\n    if (selectedVenue === self.currentVenue) {\n      // if it is, make sure info window is open\n      if (isInfoWindowOpen()) {\n        updateInfoWindow(selectedVenue.marker, selectedVenue.name);\n      }\n\n      return;\n    }\n\n    self.currentVenue(selectedVenue);\n\n    // traverse venues\n    for (index = 0; index < numberOfVenues; index++) {\n      venue = self.venues()[index];\n\n      // when the selected venue is found...\n      if (self.currentVenue() === venue) {\n        // stop all marker animations except this one\n        clearMapMarkerAnimations(venue.marker);\n\n        // toggle bounce animation on marker if necessary\n        if (venue.marker.getAnimation() !== google.maps.Animation.BOUNCE) {\n          toggleBounce(venue.marker);\n        }\n\n        // update info window content\n        updateInfoWindow(venue.marker, venue.name);\n\n        // bail out since we're done\n        break;\n      }\n    }\n  };\n\n  /**\n   * Detect if info window is open\n   * @return {boolean} - is info window open\n   */\n  function isInfoWindowOpen() {\n    var map = self.infoWindow.getMap();\n    return (map !== null && typeof map !== 'undefined');\n  }\n\n  /**\n   * Update info window's content\n   * @param {google.maps.Marker} marker - the map marker to set the info window on\n   * @param {string} info - content for the info window\n   */\n  function updateInfoWindow(marker, info) {\n    self.infoWindow.setContent(info);\n    // make sure info window is open\n    self.infoWindow.open(self.map, marker);\n  }\n\n  /**\n   * Toggle bouncing animation for a marker\n   * @param {Marker} marker - the marker to enable/disable bounce animation\n   */\n  function toggleBounce(marker) {\n    if (marker.getAnimation() === null) {\n      // enable marker animation if it wasn't running\n      marker.setAnimation(google.maps.Animation.BOUNCE);\n    } else {\n      // disable marker animation if it was running\n      marker.setAnimation(null);\n    }\n  }\n\n  /**\n   * Stop marker animations\n   * @param {google.maps.Marker} exceptThisMarker - optional marker to exclude\n   */\n  function clearMapMarkerAnimations(exceptThisMarker) {\n    // clear all marker animations except for the marker (optional) passed in\n    self.markers.forEach(function (marker) {\n      if (exceptThisMarker !== marker) {\n        marker.setAnimation(null);\n      }\n    });\n  }\n\n  /**\n   * Add map marker at venue's location on the map\n   * @param {object} venue - venue for the map marker\n   * @return {google.maps.Marker} - newly created map marker\n   */\n  function addMapMarker(venue) {\n    // create a new marker with specified options\n    var marker = new google.maps.Marker({\n      position: venue.location,\n      map: self.map,\n      title: venue.name,\n      draggable: false,\n      animation: google.maps.Animation.DROP\n    });\n\n    // expand map boundaries to contain new marker\n    self.bounds.extend(marker.position);\n    self.map.fitBounds(self.bounds);\n\n    // add a click event listener to the marker that triggers venue selection\n    google.maps.event.addListener(marker, 'click', function () { // eslint-disable-line no-loop-func\n      self.selectVenue(venue);\n    });\n\n    // add marker to the markers array\n    self.markers.push(marker);\n\n    // return new marker\n    return marker;\n  }\n\n  /**\n   * Check if venue is currently selected\n   * @param {object} venue - the venue in question\n   * @return {boolean} - true/false if venue is selected\n   */\n  self.isSelected = function (venue) {\n    return (self.currentVenue() === venue);\n  };\n\n  /**\n   * Venue constructor function\n   * @param {object} venue - data element from the venues array returned from ironAjax request\n   * @constructor\n   */\n  function Venue(venue) {\n    var self = this;\n\n    self.location = {lat: venue.location.lat, lng: venue.location.lng};\n    self.name = venue.name;\n    self.website = venue.website;\n    self.marker = addMapMarker(self);\n    self.visible = ko.observable(true);\n  }\n\n  /**\n   * Foursquare request configuration\n   * @type {{url: string, params: {client_id: string, client_secret: string, v: string, ll: string, query: string, limit: string}}}\n   */\n  var foursquareRequest = {\n    url: 'https://api.foursquare.com/v2/venues/search',\n    params: { // eslint-disable-line quote-props\n      'client_id': 'DM04OKNQOAEBGPW5UNEZCM2SG2JKZM4NYPO5FX1GN4G15BT0',\n      'client_secret': 'DMODPKCJKQ2YQTNSBR2AQEENVUT30M2RMFSXSZI5YGPB5LNF',\n      'v': '20130815',\n      'll': '40.6249522,-73.96150369999999',\n      'query': 'pizza',\n      'limit': '20'\n    }\n  };\n\n  /**\n   * Initialize the app\n   * @param {object} elementId - HTML element for the map\n   * @param {object} window - the global window object\n   * @param {object} document - the global document object\n   * @param {object} ironAjax - iron-ajax Polymer element used for ajax requests\n   */\n  self.initialize = function (elementId, window, document, ironAjax) {\n    self.window = window;\n    self.document = document;\n    self.ironAjax = ironAjax;\n\n    // self.ironAjax.addEventListener('request', function (e) { // eslint-disable-line no-unused-vars\n    //   self.ironAjax.lastResponse.response.venues;\n    // });\n\n    // add response listener for iron ajax requests\n    self.ironAjax.addEventListener('response', function (e) { // eslint-disable-line no-unused-vars\n      var responseVenues = self.ironAjax.lastResponse.response.venues;\n\n      // create new Venue objects for the venues array based on the venues data from the request\n      responseVenues.forEach(function (venue) {\n        self.venues.push(new Venue(venue));\n      });\n\n      // the array is built, now center the map to center of bounds\n      if (responseVenues.length) {\n        self.map.setCenter(self.bounds.getCenter());\n      }\n    });\n\n    // add error listener for iron ajax requests\n    self.ironAjax.addEventListener('error', function (e) { // eslint-disable-line no-unused-vars\n      self.window.alert(\n        'Foursquare data could not be retrieved.' +\n        '\\nStatus: ' +\n        e.detail.request.status +\n        '\\nStatus Text: ' +\n        e.detail.request.statusText\n      );\n    });\n\n    // conifgure ironAjax to use predefine Foursquare request\n    ironAjax.url = foursquareRequest.url;\n    ironAjax.params = foursquareRequest.params;\n\n    // execute an ajax request\n    self.ironAjax.generateRequest();\n\n    // initialize map on specified HTML element\n    initializeMap(elementId);\n\n    // apply knockout bindings\n    ko.applyBindings(self);\n  };\n}\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\n\n// Pre-defining the componentHandler interface, for closure documentation and\n// static verification.\nvar componentHandler = {\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  upgradeDom: function(optJsClass, optCssClass) {},\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  upgradeElement: function(element, optJsClass) {},\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  upgradeElements: function(elements) {},\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  upgradeAllRegistered: function() {},\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  registerUpgradedCallback: function(jsClass, callback) {},\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n   */\n  register: function(config) {},\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  downgradeElements: function(nodes) {}\n};\n\ncomponentHandler = (function() {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {string} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|boolean}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (typeof optReplace !== 'undefined') {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!Element} element The element to fetch data from.\n   * @return {!Array<string>}\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!Element} element The element we want to check.\n   * @param {string} jsClass The class to check for.\n   * @returns {boolean}\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (typeof optJsClass === 'undefined' &&\n        typeof optCssClass === 'undefined') {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {string} */ (optJsClass);\n      if (typeof optCssClass === 'undefined') {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function(component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n            classesToUpgrade.indexOf(component) === -1 &&\n            !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var ev;\n      if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n        ev = new Event('mdl-componentupgraded', {\n          'bubbles': true, 'cancelable': false\n        });\n      } else {\n        ev = document.createEvent('Events');\n        ev.initEvent('mdl-componentupgraded', true, true);\n      }\n      element.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (typeof elements.item === 'function') {\n        elements = Array.prototype.slice.call(/** @type {Array} */ (elements));\n      } else {\n        elements = [elements];\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        upgradeElementInternal(element);\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config\n   */\n  function registerInternal(config) {\n    // In order to support both Closure-compiled and uncompiled code accessing\n    // this method, we need to allow for both the dot and array syntax for\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\n    // pattern repeated across this method.\n    var widgetMissing = (typeof config.widget === 'undefined' &&\n        typeof config['widget'] === 'undefined');\n    var widget = true;\n\n    if (!widgetMissing) {\n      widget = config.widget || config['widget'];\n    }\n\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      classConstructor: config.constructor || config['constructor'],\n      className: config.classAsString || config['classAsString'],\n      cssClass: config.cssClass || config['cssClass'],\n      widget: widget,\n      callbacks: []\n    });\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered: ' + item.cssClass);\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n          'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {?componentHandler.Component} component\n   */\n  function deconstructComponentInternal(component) {\n    if (component) {\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev;\n      if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n        ev = new Event('mdl-componentdowngraded', {\n          'bubbles': true, 'cancelable': false\n        });\n      } else {\n        ev = document.createEvent('Events');\n        ev.initEvent('mdl-componentdowngraded', true, true);\n      }\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  function downgradeNodesInternal(nodes) {\n    /**\n     * Auxiliary function to downgrade a single node.\n     * @param  {!Node} node the node to be downgraded\n     */\n    var downgradeNode = function(node) {\n      createdComponents_.filter(function(item) {\n        return item.element_ === node;\n      }).forEach(deconstructComponentInternal);\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: Function,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: (string|boolean|undefined)\n * }}\n */\ncomponentHandler.ComponentConfigPublic;  // jshint ignore:line\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: string,\n *   cssClass: string,\n *   widget: (string|boolean),\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig;  // jshint ignore:line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: string,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: string\n * }}\n */\ncomponentHandler.Component;  // jshint ignore:line\n\n// Export all symbols, for the benefit of Closure compiler.\n// No effect on uncompiled code.\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\ncomponentHandler['upgradeAllRegistered'] =\n    componentHandler.upgradeAllRegistered;\ncomponentHandler['registerUpgradedCallback'] =\n    componentHandler.registerUpgradedCallback;\ncomponentHandler['register'] = componentHandler.register;\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\nwindow.componentHandler = componentHandler;\nwindow['componentHandler'] = componentHandler;\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') &&\n      'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.upgradeElement = function() {};\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.register = function() {};\n  }\n});\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialButton'] = MaterialButton;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialButton.prototype.Constant_ = {\n    // None for now.\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n  };\n\n  /**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialButton.prototype.blurHandler_ = function(event) {\n    if (event) {\n      this.element_.blur();\n    }\n  };\n\n  // Public methods.\n\n  /**\n   * Disable button.\n   *\n   * @public\n   */\n  MaterialButton.prototype.disable = function() {\n    this.element_.disabled = true;\n  };\n  MaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n\n  /**\n   * Enable button.\n   *\n   * @public\n   */\n  MaterialButton.prototype.enable = function() {\n    this.element_.disabled = false;\n  };\n  MaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n\n  /**\n   * Initialize element.\n   */\n  MaterialButton.prototype.init = function() {\n    if (this.element_) {\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleElement_ = document.createElement('span');\n        this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(this.rippleElement_);\n        this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n        this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n        this.element_.appendChild(rippleContainer);\n      }\n      this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n      this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n      this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialCheckbox = function MaterialCheckbox(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialCheckbox'] = MaterialCheckbox;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialCheckbox.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialCheckbox.prototype.CssClasses_ = {\n    INPUT: 'mdl-checkbox__input',\n    BOX_OUTLINE: 'mdl-checkbox__box-outline',\n    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded'\n  };\n\n  /**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialCheckbox.prototype.onChange_ = function(event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialCheckbox.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialCheckbox.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialCheckbox.prototype.onMouseUp_ = function(event) {\n    this.blur_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialCheckbox.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkToggleState();\n  };\n\n  /**\n   * Add blur.\n   *\n   * @private\n   */\n  MaterialCheckbox.prototype.blur_ = function() {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function() {\n      this.inputElement_.blur();\n    }.bind(this), /** @type {number} */ (this.Constant_.TINY_TIMEOUT));\n  };\n\n  // Public methods.\n\n  /**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.checkToggleState = function() {\n    if (this.inputElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n  MaterialCheckbox.prototype['checkToggleState'] =\n      MaterialCheckbox.prototype.checkToggleState;\n\n  /**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.checkDisabled = function() {\n    if (this.inputElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialCheckbox.prototype['checkDisabled'] =\n      MaterialCheckbox.prototype.checkDisabled;\n\n  /**\n   * Disable checkbox.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.disable = function() {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable;\n\n  /**\n   * Enable checkbox.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.enable = function() {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable;\n\n  /**\n   * Check checkbox.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.check = function() {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n  };\n  MaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check;\n\n  /**\n   * Uncheck checkbox.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.uncheck = function() {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n  };\n  MaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck;\n\n  /**\n   * Initialize element.\n   */\n  MaterialCheckbox.prototype.init = function() {\n    if (this.element_) {\n      this.inputElement_ = this.element_.querySelector('.' +\n          this.CssClasses_.INPUT);\n\n      var boxOutline = document.createElement('span');\n      boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n\n      var tickContainer = document.createElement('span');\n      tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n\n      var tickOutline = document.createElement('span');\n      tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n\n      boxOutline.appendChild(tickOutline);\n\n      this.element_.appendChild(tickContainer);\n      this.element_.appendChild(boxOutline);\n\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        this.rippleContainerElement_ = document.createElement('span');\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n        this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n\n        this.rippleContainerElement_.appendChild(ripple);\n        this.element_.appendChild(this.rippleContainerElement_);\n      }\n      this.boundInputOnChange = this.onChange_.bind(this);\n      this.boundInputOnFocus = this.onFocus_.bind(this);\n      this.boundInputOnBlur = this.onBlur_.bind(this);\n      this.boundElementMouseUp = this.onMouseUp_.bind(this);\n      this.inputElement_.addEventListener('change', this.boundInputOnChange);\n      this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n      this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n      this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n\n      this.updateClasses_();\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialCheckbox,\n    classAsString: 'MaterialCheckbox',\n    cssClass: 'mdl-js-checkbox',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for icon toggle MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialIconToggle = function MaterialIconToggle(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialIconToggle'] = MaterialIconToggle;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialIconToggle.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialIconToggle.prototype.CssClasses_ = {\n    INPUT: 'mdl-icon-toggle__input',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n  };\n\n  /**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialIconToggle.prototype.onChange_ = function(event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialIconToggle.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialIconToggle.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialIconToggle.prototype.onMouseUp_ = function(event) {\n    this.blur_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialIconToggle.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkToggleState();\n  };\n\n  /**\n   * Add blur.\n   *\n   * @private\n   */\n  MaterialIconToggle.prototype.blur_ = function() {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function() {\n      this.inputElement_.blur();\n    }.bind(this), /** @type {number} */ (this.Constant_.TINY_TIMEOUT));\n  };\n\n  // Public methods.\n\n  /**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.checkToggleState = function() {\n    if (this.inputElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n  MaterialIconToggle.prototype['checkToggleState'] =\n      MaterialIconToggle.prototype.checkToggleState;\n\n  /**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.checkDisabled = function() {\n    if (this.inputElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialIconToggle.prototype['checkDisabled'] =\n      MaterialIconToggle.prototype.checkDisabled;\n\n  /**\n   * Disable icon toggle.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.disable = function() {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialIconToggle.prototype['disable'] =\n      MaterialIconToggle.prototype.disable;\n\n  /**\n   * Enable icon toggle.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.enable = function() {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable;\n\n  /**\n   * Check icon toggle.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.check = function() {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n  };\n  MaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check;\n\n  /**\n   * Uncheck icon toggle.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.uncheck = function() {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n  };\n  MaterialIconToggle.prototype['uncheck'] =\n      MaterialIconToggle.prototype.uncheck;\n\n  /**\n   * Initialize element.\n   */\n  MaterialIconToggle.prototype.init = function() {\n\n    if (this.element_) {\n      this.inputElement_ =\n          this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n      if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        this.rippleContainerElement_ = document.createElement('span');\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n        this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n\n        this.rippleContainerElement_.appendChild(ripple);\n        this.element_.appendChild(this.rippleContainerElement_);\n      }\n\n      this.boundInputOnChange = this.onChange_.bind(this);\n      this.boundInputOnFocus = this.onFocus_.bind(this);\n      this.boundInputOnBlur = this.onBlur_.bind(this);\n      this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\n      this.inputElement_.addEventListener('change', this.boundInputOnChange);\n      this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n      this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n      this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\n\n      this.updateClasses_();\n      this.element_.classList.add('is-upgraded');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialIconToggle,\n    classAsString: 'MaterialIconToggle',\n    cssClass: 'mdl-js-icon-toggle',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for dropdown MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialMenu = function MaterialMenu(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialMenu'] = MaterialMenu;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialMenu.prototype.Constant_ = {\n    // Total duration of the menu animation.\n    TRANSITION_DURATION_SECONDS: 0.3,\n    // The fraction of the total duration we want to use for menu item animations.\n    TRANSITION_DURATION_FRACTION: 0.8,\n    // How long the menu stays open after choosing an option (so the user can see\n    // the ripple).\n    CLOSE_TIMEOUT: 150\n  };\n\n  /**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\n  MaterialMenu.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialMenu.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-menu__container',\n    OUTLINE: 'mdl-menu__outline',\n    ITEM: 'mdl-menu__item',\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    // Statuses\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ANIMATING: 'is-animating',\n    // Alignment options\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',  // This is the default.\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n    TOP_LEFT: 'mdl-menu--top-left',\n    TOP_RIGHT: 'mdl-menu--top-right',\n    UNALIGNED: 'mdl-menu--unaligned'\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialMenu.prototype.init = function() {\n    if (this.element_) {\n      // Create container for the menu.\n      var container = document.createElement('div');\n      container.classList.add(this.CssClasses_.CONTAINER);\n      this.element_.parentElement.insertBefore(container, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      container.appendChild(this.element_);\n      this.container_ = container;\n\n      // Create outline for the menu (shadow and background).\n      var outline = document.createElement('div');\n      outline.classList.add(this.CssClasses_.OUTLINE);\n      this.outline_ = outline;\n      container.insertBefore(outline, this.element_);\n\n      // Find the \"for\" element and bind events to it.\n      var forElId = this.element_.getAttribute('for') ||\n                      this.element_.getAttribute('data-mdl-for');\n      var forEl = null;\n      if (forElId) {\n        forEl = document.getElementById(forElId);\n        if (forEl) {\n          this.forElement_ = forEl;\n          forEl.addEventListener('click', this.handleForClick_.bind(this));\n          forEl.addEventListener('keydown',\n              this.handleForKeyboardEvent_.bind(this));\n        }\n      }\n\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n      this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\n      this.boundItemClick_ = this.handleItemClick_.bind(this);\n      for (var i = 0; i < items.length; i++) {\n        // Add a listener to each menu item.\n        items[i].addEventListener('click', this.boundItemClick_);\n        // Add a tab index to each menu item.\n        items[i].tabIndex = '-1';\n        // Add a keyboard listener to each menu item.\n        items[i].addEventListener('keydown', this.boundItemKeydown_);\n      }\n\n      // Add ripple classes to each item, if the user has enabled ripples.\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n\n        for (i = 0; i < items.length; i++) {\n          var item = items[i];\n\n          var rippleContainer = document.createElement('span');\n          rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n\n          var ripple = document.createElement('span');\n          ripple.classList.add(this.CssClasses_.RIPPLE);\n          rippleContainer.appendChild(ripple);\n\n          item.appendChild(rippleContainer);\n          item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        }\n      }\n\n      // Copy alignment classes to the container, so the outline can use them.\n      if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n        this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n      }\n      if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n      }\n      if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n      }\n      if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n      }\n      if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n      }\n\n      container.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  /**\n   * Handles a click on the \"for\" element, by positioning the menu and then\n   * toggling it.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialMenu.prototype.handleForClick_ = function(evt) {\n    if (this.element_ && this.forElement_) {\n      var rect = this.forElement_.getBoundingClientRect();\n      var forRect = this.forElement_.parentElement.getBoundingClientRect();\n\n      if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        // Do not position the menu automatically. Requires the developer to\n        // manually specify position.\n      } else if (this.element_.classList.contains(\n          this.CssClasses_.BOTTOM_RIGHT)) {\n        // Position below the \"for\" element, aligned to its right.\n        this.container_.style.right = (forRect.right - rect.right) + 'px';\n        this.container_.style.top =\n            this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n      } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        // Position above the \"for\" element, aligned to its left.\n        this.container_.style.left = this.forElement_.offsetLeft + 'px';\n        this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\n      } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        // Position above the \"for\" element, aligned to its right.\n        this.container_.style.right = (forRect.right - rect.right) + 'px';\n        this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\n      } else {\n        // Default: position below the \"for\" element, aligned to its left.\n        this.container_.style.left = this.forElement_.offsetLeft + 'px';\n        this.container_.style.top =\n            this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n      }\n    }\n\n    this.toggle(evt);\n  };\n\n  /**\n   * Handles a keyboard event on the \"for\" element.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialMenu.prototype.handleForKeyboardEvent_ = function(evt) {\n    if (this.element_ && this.container_ && this.forElement_) {\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\n        ':not([disabled])');\n\n      if (items && items.length > 0 &&\n          this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n          evt.preventDefault();\n          items[items.length - 1].focus();\n        } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n          evt.preventDefault();\n          items[0].focus();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handles a keyboard event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialMenu.prototype.handleItemKeyboardEvent_ = function(evt) {\n    if (this.element_ && this.container_) {\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\n        ':not([disabled])');\n\n      if (items && items.length > 0 &&\n          this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n\n        if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n          evt.preventDefault();\n          if (currentIndex > 0) {\n            items[currentIndex - 1].focus();\n          } else {\n            items[items.length - 1].focus();\n          }\n        } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n          evt.preventDefault();\n          if (items.length > currentIndex + 1) {\n            items[currentIndex + 1].focus();\n          } else {\n            items[0].focus();\n          }\n        } else if (evt.keyCode === this.Keycodes_.SPACE ||\n              evt.keyCode === this.Keycodes_.ENTER) {\n          evt.preventDefault();\n          // Send mousedown and mouseup to trigger ripple.\n          var e = new MouseEvent('mousedown');\n          evt.target.dispatchEvent(e);\n          e = new MouseEvent('mouseup');\n          evt.target.dispatchEvent(e);\n          // Send click.\n          evt.target.click();\n        } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n          evt.preventDefault();\n          this.hide();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handles a click event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialMenu.prototype.handleItemClick_ = function(evt) {\n    if (evt.target.hasAttribute('disabled')) {\n      evt.stopPropagation();\n    } else {\n      // Wait some time before closing menu, so the user can see the ripple.\n      this.closing_ = true;\n      window.setTimeout(function(evt) {\n        this.hide();\n        this.closing_ = false;\n      }.bind(this), /** @type {number} */ (this.Constant_.CLOSE_TIMEOUT));\n    }\n  };\n\n  /**\n   * Calculates the initial clip (for opening the menu) or final clip (for closing\n   * it), and applies it. This allows us to animate from or to the correct point,\n   * that is, the point it's aligned to in the \"for\" element.\n   *\n   * @param {number} height Height of the clip rectangle\n   * @param {number} width Width of the clip rectangle\n   * @private\n   */\n  MaterialMenu.prototype.applyClip_ = function(height, width) {\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n      // Do not clip.\n      this.element_.style.clip = '';\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n      // Clip to the top right corner of the menu.\n      this.element_.style.clip =\n          'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n      // Clip to the bottom left corner of the menu.\n      this.element_.style.clip =\n          'rect(' + height + 'px 0 ' + height + 'px 0)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n      // Clip to the bottom right corner of the menu.\n      this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' +\n          height + 'px ' + width + 'px)';\n    } else {\n      // Default: do not clip (same as clipping to the top left corner).\n      this.element_.style.clip = '';\n    }\n  };\n\n  /**\n   * Cleanup function to remove animation listeners.\n   *\n   * @param {Event} evt\n   * @private\n   */\n\n  MaterialMenu.prototype.removeAnimationEndListener_ = function(evt) {\n    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\n  };\n\n  /**\n   * Adds an event listener to clean up after the animation ends.\n   *\n   * @private\n   */\n  MaterialMenu.prototype.addAnimationEndListener_ = function() {\n    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\n    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\n  };\n\n  /**\n   * Displays the menu.\n   *\n   * @public\n   */\n  MaterialMenu.prototype.show = function(evt) {\n    if (this.element_ && this.container_ && this.outline_) {\n      // Measure the inner element.\n      var height = this.element_.getBoundingClientRect().height;\n      var width = this.element_.getBoundingClientRect().width;\n\n      // Apply the inner element's size to the container and outline.\n      this.container_.style.width = width + 'px';\n      this.container_.style.height = height + 'px';\n      this.outline_.style.width = width + 'px';\n      this.outline_.style.height = height + 'px';\n\n      var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS *\n          this.Constant_.TRANSITION_DURATION_FRACTION;\n\n      // Calculate transition delays for individual menu items, so that they fade\n      // in one at a time.\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n      for (var i = 0; i < items.length; i++) {\n        var itemDelay = null;\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) ||\n            this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n          itemDelay = ((height - items[i].offsetTop - items[i].offsetHeight) /\n              height * transitionDuration) + 's';\n        } else {\n          itemDelay = (items[i].offsetTop / height * transitionDuration) + 's';\n        }\n        items[i].style.transitionDelay = itemDelay;\n      }\n\n      // Apply the initial clip to the text before we start animating.\n      this.applyClip_(height, width);\n\n      // Wait for the next frame, turn on animation, and apply the final clip.\n      // Also make it visible. This triggers the transitions.\n      window.requestAnimationFrame(function() {\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n        this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n        this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n      }.bind(this));\n\n      // Clean up after the animation is complete.\n      this.addAnimationEndListener_();\n\n      // Add a click listener to the document, to close the menu.\n      var callback = function(e) {\n        // Check to see if the document is processing the same event that\n        // displayed the menu in the first place. If so, do nothing.\n        // Also check to see if the menu is in the process of closing itself, and\n        // do nothing in that case.\n        // Also check if the clicked element is a menu item\n        // if so, do nothing.\n        if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\n          document.removeEventListener('click', callback);\n          this.hide();\n        }\n      }.bind(this);\n      document.addEventListener('click', callback);\n    }\n  };\n  MaterialMenu.prototype['show'] = MaterialMenu.prototype.show;\n\n  /**\n   * Hides the menu.\n   *\n   * @public\n   */\n  MaterialMenu.prototype.hide = function() {\n    if (this.element_ && this.container_ && this.outline_) {\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\n      // Remove all transition delays; menu items fade out concurrently.\n      for (var i = 0; i < items.length; i++) {\n        items[i].style.removeProperty('transition-delay');\n      }\n\n      // Measure the inner element.\n      var rect = this.element_.getBoundingClientRect();\n      var height = rect.height;\n      var width = rect.width;\n\n      // Turn on animation, and apply the final clip. Also make invisible.\n      // This triggers the transitions.\n      this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n      this.applyClip_(height, width);\n      this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n\n      // Clean up after the animation is complete.\n      this.addAnimationEndListener_();\n    }\n  };\n  MaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;\n\n  /**\n   * Displays or hides the menu, depending on current state.\n   *\n   * @public\n   */\n  MaterialMenu.prototype.toggle = function(evt) {\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n      this.hide();\n    } else {\n      this.show(evt);\n    }\n  };\n  MaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialMenu,\n    classAsString: 'MaterialMenu',\n    cssClass: 'mdl-js-menu',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Progress MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialProgress = function MaterialProgress(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialProgress'] = MaterialProgress;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialProgress.prototype.Constant_ = {\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialProgress.prototype.CssClasses_ = {\n    INDETERMINATE_CLASS: 'mdl-progress__indeterminate'\n  };\n\n  /**\n   * Set the current progress of the progressbar.\n   *\n   * @param {number} p Percentage of the progress (0-100)\n   * @public\n   */\n  MaterialProgress.prototype.setProgress = function(p) {\n    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n      return;\n    }\n\n    this.progressbar_.style.width = p + '%';\n  };\n  MaterialProgress.prototype['setProgress'] =\n      MaterialProgress.prototype.setProgress;\n\n  /**\n   * Set the current progress of the buffer.\n   *\n   * @param {number} p Percentage of the buffer (0-100)\n   * @public\n   */\n  MaterialProgress.prototype.setBuffer = function(p) {\n    this.bufferbar_.style.width = p + '%';\n    this.auxbar_.style.width = (100 - p) + '%';\n  };\n  MaterialProgress.prototype['setBuffer'] =\n      MaterialProgress.prototype.setBuffer;\n\n  /**\n   * Initialize element.\n   */\n  MaterialProgress.prototype.init = function() {\n    if (this.element_) {\n      var el = document.createElement('div');\n      el.className = 'progressbar bar bar1';\n      this.element_.appendChild(el);\n      this.progressbar_ = el;\n\n      el = document.createElement('div');\n      el.className = 'bufferbar bar bar2';\n      this.element_.appendChild(el);\n      this.bufferbar_ = el;\n\n      el = document.createElement('div');\n      el.className = 'auxbar bar bar3';\n      this.element_.appendChild(el);\n      this.auxbar_ = el;\n\n      this.progressbar_.style.width = '0%';\n      this.bufferbar_.style.width = '100%';\n      this.auxbar_.style.width = '0%';\n\n      this.element_.classList.add('is-upgraded');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialProgress,\n    classAsString: 'MaterialProgress',\n    cssClass: 'mdl-js-progress',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Radio MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialRadio = function MaterialRadio(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialRadio'] = MaterialRadio;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialRadio.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialRadio.prototype.CssClasses_ = {\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded',\n    JS_RADIO: 'mdl-js-radio',\n    RADIO_BTN: 'mdl-radio__button',\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple'\n  };\n\n  /**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRadio.prototype.onChange_ = function(event) {\n    // Since other radio buttons don't get change events, we need to look for\n    // them to update their classes.\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n    for (var i = 0; i < radios.length; i++) {\n      var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n      // Different name == different group, so no point updating those.\n      if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n        radios[i]['MaterialRadio'].updateClasses_();\n      }\n    }\n  };\n\n  /**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRadio.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRadio.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRadio.prototype.onMouseup_ = function(event) {\n    this.blur_();\n  };\n\n  /**\n   * Update classes.\n   *\n   * @private\n   */\n  MaterialRadio.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkToggleState();\n  };\n\n  /**\n   * Add blur.\n   *\n   * @private\n   */\n  MaterialRadio.prototype.blur_ = function() {\n\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function() {\n      this.btnElement_.blur();\n    }.bind(this), /** @type {number} */ (this.Constant_.TINY_TIMEOUT));\n  };\n\n  // Public methods.\n\n  /**\n   * Check the components disabled state.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.checkDisabled = function() {\n    if (this.btnElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialRadio.prototype['checkDisabled'] =\n      MaterialRadio.prototype.checkDisabled;\n\n  /**\n   * Check the components toggled state.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.checkToggleState = function() {\n    if (this.btnElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n  MaterialRadio.prototype['checkToggleState'] =\n      MaterialRadio.prototype.checkToggleState;\n\n  /**\n   * Disable radio.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.disable = function() {\n    this.btnElement_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;\n\n  /**\n   * Enable radio.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.enable = function() {\n    this.btnElement_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;\n\n  /**\n   * Check radio.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.check = function() {\n    this.btnElement_.checked = true;\n    this.updateClasses_();\n  };\n  MaterialRadio.prototype['check'] = MaterialRadio.prototype.check;\n\n  /**\n   * Uncheck radio.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.uncheck = function() {\n    this.btnElement_.checked = false;\n    this.updateClasses_();\n  };\n  MaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;\n\n  /**\n   * Initialize element.\n   */\n  MaterialRadio.prototype.init = function() {\n    if (this.element_) {\n      this.btnElement_ = this.element_.querySelector('.' +\n          this.CssClasses_.RADIO_BTN);\n\n      this.boundChangeHandler_ = this.onChange_.bind(this);\n      this.boundFocusHandler_ = this.onChange_.bind(this);\n      this.boundBlurHandler_ = this.onBlur_.bind(this);\n      this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\n\n      var outerCircle = document.createElement('span');\n      outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n\n      var innerCircle = document.createElement('span');\n      innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n\n      this.element_.appendChild(outerCircle);\n      this.element_.appendChild(innerCircle);\n\n      var rippleContainer;\n      if (this.element_.classList.contains(\n          this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(\n            this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(\n            this.CssClasses_.RIPPLE_CONTAINER);\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n\n        rippleContainer.appendChild(ripple);\n        this.element_.appendChild(rippleContainer);\n      }\n\n      this.btnElement_.addEventListener('change', this.boundChangeHandler_);\n      this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\n      this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\n      this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\n\n      this.updateClasses_();\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialRadio,\n    classAsString: 'MaterialRadio',\n    cssClass: 'mdl-js-radio',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Slider MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialSlider = function MaterialSlider(element) {\n    this.element_ = element;\n    // Browser feature detection.\n    this.isIE_ = window.navigator.msPointerEnabled;\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialSlider'] = MaterialSlider;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialSlider.prototype.Constant_ = {\n    // None for now.\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialSlider.prototype.CssClasses_ = {\n    IE_CONTAINER: 'mdl-slider__ie-container',\n    SLIDER_CONTAINER: 'mdl-slider__container',\n    BACKGROUND_FLEX: 'mdl-slider__background-flex',\n    BACKGROUND_LOWER: 'mdl-slider__background-lower',\n    BACKGROUND_UPPER: 'mdl-slider__background-upper',\n    IS_LOWEST_VALUE: 'is-lowest-value',\n    IS_UPGRADED: 'is-upgraded'\n  };\n\n  /**\n   * Handle input on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSlider.prototype.onInput_ = function(event) {\n    this.updateValueStyles_();\n  };\n\n  /**\n   * Handle change on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSlider.prototype.onChange_ = function(event) {\n    this.updateValueStyles_();\n  };\n\n  /**\n   * Handle mouseup on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSlider.prototype.onMouseUp_ = function(event) {\n    event.target.blur();\n  };\n\n  /**\n   * Handle mousedown on container element.\n   * This handler is purpose is to not require the use to click\n   * exactly on the 2px slider element, as FireFox seems to be very\n   * strict about this.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   * @suppress {missingProperties}\n   */\n  MaterialSlider.prototype.onContainerMouseDown_ = function(event) {\n    // If this click is not on the parent element (but rather some child)\n    // ignore. It may still bubble up.\n    if (event.target !== this.element_.parentElement) {\n      return;\n    }\n\n    // Discard the original event and create a new event that\n    // is on the slider element.\n    event.preventDefault();\n    var newEvent = new MouseEvent('mousedown', {\n      target: event.target,\n      buttons: event.buttons,\n      clientX: event.clientX,\n      clientY: this.element_.getBoundingClientRect().y\n    });\n    this.element_.dispatchEvent(newEvent);\n  };\n\n  /**\n   * Handle updating of values.\n   *\n   * @private\n   */\n  MaterialSlider.prototype.updateValueStyles_ = function() {\n    // Calculate and apply percentages to div structure behind slider.\n    var fraction = (this.element_.value - this.element_.min) /\n        (this.element_.max - this.element_.min);\n\n    if (fraction === 0) {\n      this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n    }\n\n    if (!this.isIE_) {\n      this.backgroundLower_.style.flex = fraction;\n      this.backgroundLower_.style.webkitFlex = fraction;\n      this.backgroundUpper_.style.flex = 1 - fraction;\n      this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n    }\n  };\n\n  // Public methods.\n\n  /**\n   * Disable slider.\n   *\n   * @public\n   */\n  MaterialSlider.prototype.disable = function() {\n    this.element_.disabled = true;\n  };\n  MaterialSlider.prototype['disable'] = MaterialSlider.prototype.disable;\n\n  /**\n   * Enable slider.\n   *\n   * @public\n   */\n  MaterialSlider.prototype.enable = function() {\n\n    this.element_.disabled = false;\n  };\n  MaterialSlider.prototype['enable'] = MaterialSlider.prototype.enable;\n\n  /**\n   * Update slider value.\n   *\n   * @param {number} value The value to which to set the control (optional).\n   * @public\n   */\n  MaterialSlider.prototype.change = function(value) {\n\n    if (typeof value !== 'undefined') {\n      this.element_.value = value;\n    }\n    this.updateValueStyles_();\n  };\n  MaterialSlider.prototype['change'] = MaterialSlider.prototype.change;\n\n  /**\n   * Initialize element.\n   */\n  MaterialSlider.prototype.init = function() {\n\n    if (this.element_) {\n      if (this.isIE_) {\n        // Since we need to specify a very large height in IE due to\n        // implementation limitations, we add a parent here that trims it down to\n        // a reasonable size.\n        var containerIE = document.createElement('div');\n        containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n        this.element_.parentElement.insertBefore(containerIE, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        containerIE.appendChild(this.element_);\n      } else {\n        // For non-IE browsers, we need a div structure that sits behind the\n        // slider and allows us to style the left and right sides of it with\n        // different colors.\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        var backgroundFlex = document.createElement('div');\n        backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n        container.appendChild(backgroundFlex);\n        this.backgroundLower_ = document.createElement('div');\n        this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n        backgroundFlex.appendChild(this.backgroundLower_);\n        this.backgroundUpper_ = document.createElement('div');\n        this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n        backgroundFlex.appendChild(this.backgroundUpper_);\n      }\n\n      this.boundInputHandler = this.onInput_.bind(this);\n      this.boundChangeHandler = this.onChange_.bind(this);\n      this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n      this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);\n      this.element_.addEventListener('input', this.boundInputHandler);\n      this.element_.addEventListener('change', this.boundChangeHandler);\n      this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n      this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);\n\n      this.updateValueStyles_();\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSlider,\n    classAsString: 'MaterialSlider',\n    cssClass: 'mdl-js-slider',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Spinner MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   * @constructor\n   */\n  var MaterialSpinner = function MaterialSpinner(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialSpinner'] = MaterialSpinner;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialSpinner.prototype.Constant_ = {\n    MDL_SPINNER_LAYER_COUNT: 4\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialSpinner.prototype.CssClasses_ = {\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n  };\n\n  /**\n   * Auxiliary method to create a spinner layer.\n   *\n   * @param {number} index Index of the layer to be created.\n   * @public\n   */\n  MaterialSpinner.prototype.createLayer = function(index) {\n    var layer = document.createElement('div');\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n\n    var leftClipper = document.createElement('div');\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n\n    var gapPatch = document.createElement('div');\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n\n    var rightClipper = document.createElement('div');\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n\n    var circleOwners = [leftClipper, gapPatch, rightClipper];\n\n    for (var i = 0; i < circleOwners.length; i++) {\n      var circle = document.createElement('div');\n      circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n      circleOwners[i].appendChild(circle);\n    }\n\n    layer.appendChild(leftClipper);\n    layer.appendChild(gapPatch);\n    layer.appendChild(rightClipper);\n\n    this.element_.appendChild(layer);\n  };\n  MaterialSpinner.prototype['createLayer'] =\n      MaterialSpinner.prototype.createLayer;\n\n  /**\n   * Stops the spinner animation.\n   * Public method for users who need to stop the spinner for any reason.\n   *\n   * @public\n   */\n  MaterialSpinner.prototype.stop = function() {\n    this.element_.classList.remove('is-active');\n  };\n  MaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;\n\n  /**\n   * Starts the spinner animation.\n   * Public method for users who need to manually start the spinner for any reason\n   * (instead of just adding the 'is-active' class to their markup).\n   *\n   * @public\n   */\n  MaterialSpinner.prototype.start = function() {\n    this.element_.classList.add('is-active');\n  };\n  MaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;\n\n  /**\n   * Initialize element.\n   */\n  MaterialSpinner.prototype.init = function() {\n    if (this.element_) {\n      for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n        this.createLayer(i);\n      }\n\n      this.element_.classList.add('is-upgraded');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSpinner,\n    classAsString: 'MaterialSpinner',\n    cssClass: 'mdl-js-spinner',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialSwitch = function MaterialSwitch(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialSwitch'] = MaterialSwitch;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialSwitch.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialSwitch.prototype.CssClasses_ = {\n    INPUT: 'mdl-switch__input',\n    TRACK: 'mdl-switch__track',\n    THUMB: 'mdl-switch__thumb',\n    FOCUS_HELPER: 'mdl-switch__focus-helper',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n  };\n\n  /**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSwitch.prototype.onChange_ = function(event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSwitch.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSwitch.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSwitch.prototype.onMouseUp_ = function(event) {\n    this.blur_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialSwitch.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkToggleState();\n  };\n\n  /**\n   * Add blur.\n   *\n   * @private\n   */\n  MaterialSwitch.prototype.blur_ = function() {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function() {\n      this.inputElement_.blur();\n    }.bind(this), /** @type {number} */ (this.Constant_.TINY_TIMEOUT));\n  };\n\n  // Public methods.\n\n  /**\n   * Check the components disabled state.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.checkDisabled = function() {\n    if (this.inputElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialSwitch.prototype['checkDisabled'] =\n      MaterialSwitch.prototype.checkDisabled;\n\n  /**\n   * Check the components toggled state.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.checkToggleState = function() {\n    if (this.inputElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n  MaterialSwitch.prototype['checkToggleState'] =\n      MaterialSwitch.prototype.checkToggleState;\n\n  /**\n   * Disable switch.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.disable = function() {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable;\n\n  /**\n   * Enable switch.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.enable = function() {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable;\n\n  /**\n   * Activate switch.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.on = function() {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n  };\n  MaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on;\n\n  /**\n   * Deactivate switch.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.off = function() {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n  };\n  MaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off;\n\n  /**\n   * Initialize element.\n   */\n  MaterialSwitch.prototype.init = function() {\n    if (this.element_) {\n      this.inputElement_ = this.element_.querySelector('.' +\n          this.CssClasses_.INPUT);\n\n      var track = document.createElement('div');\n      track.classList.add(this.CssClasses_.TRACK);\n\n      var thumb = document.createElement('div');\n      thumb.classList.add(this.CssClasses_.THUMB);\n\n      var focusHelper = document.createElement('span');\n      focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n\n      thumb.appendChild(focusHelper);\n\n      this.element_.appendChild(track);\n      this.element_.appendChild(thumb);\n\n      this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n\n      if (this.element_.classList.contains(\n          this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(\n            this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        this.rippleContainerElement_ = document.createElement('span');\n        this.rippleContainerElement_.classList.add(\n            this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n\n        this.rippleContainerElement_.appendChild(ripple);\n        this.element_.appendChild(this.rippleContainerElement_);\n      }\n\n      this.boundChangeHandler = this.onChange_.bind(this);\n      this.boundFocusHandler = this.onFocus_.bind(this);\n      this.boundBlurHandler = this.onBlur_.bind(this);\n\n      this.inputElement_.addEventListener('change', this.boundChangeHandler);\n      this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n      this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n      this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n\n      this.updateClasses_();\n      this.element_.classList.add('is-upgraded');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSwitch,\n    classAsString: 'MaterialSwitch',\n    cssClass: 'mdl-js-switch',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Tabs MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\n  var MaterialTabs = function MaterialTabs(element) {\n    // Stores the HTML element.\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialTabs'] = MaterialTabs;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialTabs.prototype.Constant_ = {\n    // None at the moment.\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialTabs.prototype.CssClasses_ = {\n    TAB_CLASS: 'mdl-tabs__tab',\n    PANEL_CLASS: 'mdl-tabs__panel',\n    ACTIVE_CLASS: 'is-active',\n    UPGRADED_CLASS: 'is-upgraded',\n\n    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n    MDL_RIPPLE: 'mdl-ripple',\n    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n  };\n\n  /**\n   * Handle clicks to a tabs component\n   *\n   * @private\n   */\n  MaterialTabs.prototype.initTabs_ = function() {\n    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n      this.element_.classList.add(\n        this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n    }\n\n    // Select element tabs, document panels\n    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n    this.panels_ =\n        this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n\n    // Create new tabs for each tab element\n    for (var i = 0; i < this.tabs_.length; i++) {\n      new MaterialTab(this.tabs_[i], this);\n    }\n\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n  };\n\n  /**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\n  MaterialTabs.prototype.resetTabState_ = function() {\n    for (var k = 0; k < this.tabs_.length; k++) {\n      this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n  };\n\n  /**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\n  MaterialTabs.prototype.resetPanelState_ = function() {\n    for (var j = 0; j < this.panels_.length; j++) {\n      this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialTabs.prototype.init = function() {\n    if (this.element_) {\n      this.initTabs_();\n    }\n  };\n\n  /**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {Element} tab The HTML element for the tab.\n   * @param {MaterialTabs} ctx The MaterialTabs object that owns the tab.\n   */\n  function MaterialTab(tab, ctx) {\n    if (tab) {\n      if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n        rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n        var ripple = document.createElement('span');\n        ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n        rippleContainer.appendChild(ripple);\n        tab.appendChild(rippleContainer);\n      }\n\n      tab.addEventListener('click', function(e) {\n        e.preventDefault();\n        var href = tab.href.split('#')[1];\n        var panel = ctx.element_.querySelector('#' + href);\n        ctx.resetTabState_();\n        ctx.resetPanelState_();\n        tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n        panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n      });\n\n    }\n  }\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialTabs,\n    classAsString: 'MaterialTabs',\n    cssClass: 'mdl-js-tabs'\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Textfield MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialTextfield = function MaterialTextfield(element) {\n    this.element_ = element;\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialTextfield'] = MaterialTextfield;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialTextfield.prototype.Constant_ = {\n    NO_MAX_ROWS: -1,\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialTextfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-textfield__label',\n    INPUT: 'mdl-textfield__input',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded',\n    HAS_PLACEHOLDER: 'has-placeholder'\n  };\n\n  /**\n   * Handle input being entered.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTextfield.prototype.onKeyDown_ = function(event) {\n    var currentRowCount = event.target.value.split('\\n').length;\n    if (event.keyCode === 13) {\n      if (currentRowCount >= this.maxRows) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTextfield.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTextfield.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle reset event from out side.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTextfield.prototype.onReset_ = function(event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialTextfield.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n    this.checkFocus();\n  };\n\n  // Public methods.\n\n  /**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.checkDisabled = function() {\n    if (this.input_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialTextfield.prototype['checkDisabled'] =\n      MaterialTextfield.prototype.checkDisabled;\n\n  /**\n  * Check the focus state and update field accordingly.\n  *\n  * @public\n  */\n  MaterialTextfield.prototype.checkFocus = function() {\n    if (Boolean(this.element_.querySelector(':focus'))) {\n      this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n  };\n  MaterialTextfield.prototype['checkFocus'] =\n    MaterialTextfield.prototype.checkFocus;\n\n  /**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.checkValidity = function() {\n    if (this.input_.validity) {\n      if (this.input_.validity.valid) {\n        this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n      } else {\n        this.element_.classList.add(this.CssClasses_.IS_INVALID);\n      }\n    }\n  };\n  MaterialTextfield.prototype['checkValidity'] =\n      MaterialTextfield.prototype.checkValidity;\n\n  /**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.checkDirty = function() {\n    if (this.input_.value && this.input_.value.length > 0) {\n      this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n  };\n  MaterialTextfield.prototype['checkDirty'] =\n      MaterialTextfield.prototype.checkDirty;\n\n  /**\n   * Disable text field.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.disable = function() {\n    this.input_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\n\n  /**\n   * Enable text field.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.enable = function() {\n    this.input_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\n\n  /**\n   * Update text field value.\n   *\n   * @param {string} value The value to which to set the control (optional).\n   * @public\n   */\n  MaterialTextfield.prototype.change = function(value) {\n\n    this.input_.value = value || '';\n    this.updateClasses_();\n  };\n  MaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\n\n  /**\n   * Initialize element.\n   */\n  MaterialTextfield.prototype.init = function() {\n\n    if (this.element_) {\n      this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n      this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n      if (this.input_) {\n        if (this.input_.hasAttribute(\n              /** @type {string} */ (this.Constant_.MAX_ROWS_ATTRIBUTE))) {\n          this.maxRows = parseInt(this.input_.getAttribute(\n              /** @type {string} */ (this.Constant_.MAX_ROWS_ATTRIBUTE)), 10);\n          if (isNaN(this.maxRows)) {\n            this.maxRows = this.Constant_.NO_MAX_ROWS;\n          }\n        }\n\n        if (this.input_.hasAttribute('placeholder')) {\n          this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\n        }\n\n        this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.boundResetHandler = this.onReset_.bind(this);\n        this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n        this.input_.addEventListener('focus', this.boundFocusHandler);\n        this.input_.addEventListener('blur', this.boundBlurHandler);\n        this.input_.addEventListener('reset', this.boundResetHandler);\n\n        if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n          // TODO: This should handle pasting multi line text.\n          // Currently doesn't.\n          this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n          this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n        }\n        var invalid = this.element_.classList\n          .contains(this.CssClasses_.IS_INVALID);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        if (invalid) {\n          this.element_.classList.add(this.CssClasses_.IS_INVALID);\n        }\n        if (this.input_.hasAttribute('autofocus')) {\n          this.element_.focus();\n          this.checkFocus();\n        }\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialTextfield,\n    classAsString: 'MaterialTextfield',\n    cssClass: 'mdl-js-textfield',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Tooltip MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialTooltip = function MaterialTooltip(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialTooltip'] = MaterialTooltip;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialTooltip.prototype.Constant_ = {\n    // None for now.\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialTooltip.prototype.CssClasses_ = {\n    IS_ACTIVE: 'is-active',\n    BOTTOM: 'mdl-tooltip--bottom',\n    LEFT: 'mdl-tooltip--left',\n    RIGHT: 'mdl-tooltip--right',\n    TOP: 'mdl-tooltip--top'\n  };\n\n  /**\n   * Handle mouseenter for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTooltip.prototype.handleMouseEnter_ = function(event) {\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + (props.width / 2);\n    var top = props.top + (props.height / 2);\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    var marginTop = -1 * (this.element_.offsetHeight / 2);\n\n    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n      left = (props.width / 2);\n      if (top + marginTop < 0) {\n        this.element_.style.top = 0;\n        this.element_.style.marginTop = 0;\n      } else {\n        this.element_.style.top = top + 'px';\n        this.element_.style.marginTop = marginTop + 'px';\n      }\n    } else {\n      if (left + marginLeft < 0) {\n        this.element_.style.left = 0;\n        this.element_.style.marginLeft = 0;\n      } else {\n        this.element_.style.left = left + 'px';\n        this.element_.style.marginLeft = marginLeft + 'px';\n      }\n    }\n\n    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n      this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n      this.element_.style.left = props.left + props.width + 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n      this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n    } else {\n      this.element_.style.top = props.top + props.height + 10 + 'px';\n    }\n\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n  };\n\n  /**\n   * Handle mouseleave for tooltip.\n   *\n   * @private\n   */\n  MaterialTooltip.prototype.handleMouseLeave_ = function() {\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialTooltip.prototype.init = function() {\n\n    if (this.element_) {\n      var forElId = this.element_.getAttribute('for');\n\n      if (forElId) {\n        this.forElement_ = document.getElementById(forElId);\n      }\n\n      if (this.forElement_) {\n        // It's left here because it prevents accidental text selection on Android\n        if (!this.forElement_.hasAttribute('tabindex')) {\n          this.forElement_.setAttribute('tabindex', '0');\n        }\n\n        this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n        this.boundMouseLeaveHandler = this.handleMouseLeave_.bind(this);\n        this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n        this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n        this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveHandler, false);\n        window.addEventListener('touchstart', this.boundMouseLeaveHandler);\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Layout MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialLayout = function MaterialLayout(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialLayout'] = MaterialLayout;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialLayout.prototype.Constant_ = {\n    MAX_WIDTH: '(max-width: 1024px)',\n    TAB_SCROLL_PIXELS: 100,\n    RESIZE_TIMEOUT: 100,\n\n    MENU_ICON: '&#xE5D2;',\n    CHEVRON_LEFT: 'chevron_left',\n    CHEVRON_RIGHT: 'chevron_right'\n  };\n\n  /**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\n  MaterialLayout.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32\n  };\n\n  /**\n   * Modes.\n   *\n   * @enum {number}\n   * @private\n   */\n  MaterialLayout.prototype.Mode_ = {\n    STANDARD: 0,\n    SEAMED: 1,\n    WATERFALL: 2,\n    SCROLL: 3\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialLayout.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-layout__container',\n    HEADER: 'mdl-layout__header',\n    DRAWER: 'mdl-layout__drawer',\n    CONTENT: 'mdl-layout__content',\n    DRAWER_BTN: 'mdl-layout__drawer-button',\n\n    ICON: 'material-icons',\n\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n    RIPPLE: 'mdl-ripple',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n\n    HEADER_SEAMED: 'mdl-layout__header--seamed',\n    HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n    HEADER_SCROLL: 'mdl-layout__header--scroll',\n\n    FIXED_HEADER: 'mdl-layout--fixed-header',\n    OBFUSCATOR: 'mdl-layout__obfuscator',\n\n    TAB_BAR: 'mdl-layout__tab-bar',\n    TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n    TAB: 'mdl-layout__tab',\n    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n    PANEL: 'mdl-layout__tab-panel',\n\n    HAS_DRAWER: 'has-drawer',\n    HAS_TABS: 'has-tabs',\n    HAS_SCROLLING_HEADER: 'has-scrolling-header',\n    CASTING_SHADOW: 'is-casting-shadow',\n    IS_COMPACT: 'is-compact',\n    IS_SMALL_SCREEN: 'is-small-screen',\n    IS_DRAWER_OPEN: 'is-visible',\n    IS_ACTIVE: 'is-active',\n    IS_UPGRADED: 'is-upgraded',\n    IS_ANIMATING: 'is-animating',\n\n    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\n    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\n\n  };\n\n  /**\n   * Handles scrolling on the content.\n   *\n   * @private\n   */\n  MaterialLayout.prototype.contentScrollHandler_ = function() {\n    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\n      return;\n    }\n\n    var headerVisible =\n        !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) ||\n        this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);\n\n    if (this.content_.scrollTop > 0 &&\n        !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n      this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n      this.header_.classList.add(this.CssClasses_.IS_COMPACT);\n      if (headerVisible) {\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n      }\n    } else if (this.content_.scrollTop <= 0 &&\n        this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n      this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n      this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n      if (headerVisible) {\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n      }\n    }\n  };\n\n  /**\n   * Handles a keyboard event on the drawer.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialLayout.prototype.keyboardEventHandler_ = function(evt) {\n    // Only react when the drawer is open.\n    if (evt.keyCode === this.Keycodes_.ESCAPE &&\n        this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n      this.toggleDrawer();\n    }\n  };\n\n  /**\n   * Handles changes in screen size.\n   *\n   * @private\n   */\n  MaterialLayout.prototype.screenSizeHandler_ = function() {\n    if (this.screenSizeMediaQuery_.matches) {\n      this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);\n      // Collapse drawer (if any) when moving to a large screen size.\n      if (this.drawer_) {\n        this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n        this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n      }\n    }\n  };\n\n  /**\n   * Handles events of drawer button.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialLayout.prototype.drawerToggleHandler_ = function(evt) {\n    if (evt && (evt.type === 'keydown')) {\n      if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n        // prevent scrolling in drawer nav\n        evt.preventDefault();\n      } else {\n        // prevent other keys\n        return;\n      }\n    }\n\n    this.toggleDrawer();\n  };\n\n  /**\n   * Handles (un)setting the `is-animating` class\n   *\n   * @private\n   */\n  MaterialLayout.prototype.headerTransitionEndHandler_ = function() {\n    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\n  };\n\n  /**\n   * Handles expanding the header on click\n   *\n   * @private\n   */\n  MaterialLayout.prototype.headerClickHandler_ = function() {\n    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n      this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n      this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    }\n  };\n\n  /**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\n  MaterialLayout.prototype.resetTabState_ = function(tabBar) {\n    for (var k = 0; k < tabBar.length; k++) {\n      tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n  };\n\n  /**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\n  MaterialLayout.prototype.resetPanelState_ = function(panels) {\n    for (var j = 0; j < panels.length; j++) {\n      panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n  };\n\n  /**\n  * Toggle drawer state\n  *\n  * @public\n  */\n  MaterialLayout.prototype.toggleDrawer = function() {\n    var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n\n    // Set accessibility properties.\n    if (this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n      this.drawer_.setAttribute('aria-hidden', 'false');\n      drawerButton.setAttribute('aria-expanded', 'true');\n    } else {\n      this.drawer_.setAttribute('aria-hidden', 'true');\n      drawerButton.setAttribute('aria-expanded', 'false');\n    }\n  };\n  MaterialLayout.prototype['toggleDrawer'] =\n      MaterialLayout.prototype.toggleDrawer;\n\n  /**\n   * Initialize element.\n   */\n  MaterialLayout.prototype.init = function() {\n    if (this.element_) {\n      var container = document.createElement('div');\n      container.classList.add(this.CssClasses_.CONTAINER);\n\n      var focusedElement = this.element_.querySelector(':focus');\n\n      this.element_.parentElement.insertBefore(container, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      container.appendChild(this.element_);\n\n      if (focusedElement) {\n        focusedElement.focus();\n      }\n\n      var directChildren = this.element_.childNodes;\n      var numChildren = directChildren.length;\n      for (var c = 0; c < numChildren; c++) {\n        var child = directChildren[c];\n        if (child.classList &&\n            child.classList.contains(this.CssClasses_.HEADER)) {\n          this.header_ = child;\n        }\n\n        if (child.classList &&\n            child.classList.contains(this.CssClasses_.DRAWER)) {\n          this.drawer_ = child;\n        }\n\n        if (child.classList &&\n            child.classList.contains(this.CssClasses_.CONTENT)) {\n          this.content_ = child;\n        }\n      }\n\n      window.addEventListener('pageshow', function(e) {\n        if (e.persisted) { // when page is loaded from back/forward cache\n          // trigger repaint to let layout scroll in safari\n          this.element_.style.overflowY = 'hidden';\n          requestAnimationFrame(function() {\n            this.element_.style.overflowY = '';\n          }.bind(this));\n        }\n      }.bind(this), false);\n\n      if (this.header_) {\n        this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\n      }\n\n      var mode = this.Mode_.STANDARD;\n\n      if (this.header_) {\n        if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n          mode = this.Mode_.SEAMED;\n        } else if (this.header_.classList.contains(\n            this.CssClasses_.HEADER_WATERFALL)) {\n          mode = this.Mode_.WATERFALL;\n          this.header_.addEventListener('transitionend',\n            this.headerTransitionEndHandler_.bind(this));\n          this.header_.addEventListener('click',\n            this.headerClickHandler_.bind(this));\n        } else if (this.header_.classList.contains(\n            this.CssClasses_.HEADER_SCROLL)) {\n          mode = this.Mode_.SCROLL;\n          container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\n        }\n\n        if (mode === this.Mode_.STANDARD) {\n          this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n          if (this.tabBar_) {\n            this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\n          }\n        } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n          this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n          if (this.tabBar_) {\n            this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n          }\n        } else if (mode === this.Mode_.WATERFALL) {\n          // Add and remove shadows depending on scroll position.\n          // Also add/remove auxiliary class for styling of the compact version of\n          // the header.\n          this.content_.addEventListener('scroll',\n              this.contentScrollHandler_.bind(this));\n          this.contentScrollHandler_();\n        }\n      }\n\n      // Add drawer toggling button to our layout, if we have an openable drawer.\n      if (this.drawer_) {\n        var drawerButton = this.element_.querySelector('.' +\n          this.CssClasses_.DRAWER_BTN);\n        if (!drawerButton) {\n          drawerButton = document.createElement('div');\n          drawerButton.setAttribute('aria-expanded', 'false');\n          drawerButton.setAttribute('role', 'button');\n          drawerButton.setAttribute('tabindex', '0');\n          drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n\n          var drawerButtonIcon = document.createElement('i');\n          drawerButtonIcon.classList.add(this.CssClasses_.ICON);\n          drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;\n          drawerButton.appendChild(drawerButtonIcon);\n        }\n\n        if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\n          //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\n          drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\n        } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\n          //If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\n          drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\n        }\n\n        drawerButton.addEventListener('click',\n            this.drawerToggleHandler_.bind(this));\n\n        drawerButton.addEventListener('keydown',\n            this.drawerToggleHandler_.bind(this));\n\n        // Add a class if the layout has a drawer, for altering the left padding.\n        // Adds the HAS_DRAWER to the elements since this.header_ may or may\n        // not be present.\n        this.element_.classList.add(this.CssClasses_.HAS_DRAWER);\n\n        // If we have a fixed header, add the button to the header rather than\n        // the layout.\n        if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n          this.header_.insertBefore(drawerButton, this.header_.firstChild);\n        } else {\n          this.element_.insertBefore(drawerButton, this.content_);\n        }\n\n        var obfuscator = document.createElement('div');\n        obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n        this.element_.appendChild(obfuscator);\n        obfuscator.addEventListener('click',\n            this.drawerToggleHandler_.bind(this));\n        this.obfuscator_ = obfuscator;\n\n        this.drawer_.addEventListener('keydown', this.keyboardEventHandler_.bind(this));\n        this.drawer_.setAttribute('aria-hidden', 'true');\n      }\n\n      // Keep an eye on screen size, and add/remove auxiliary class for styling\n      // of small screens.\n      this.screenSizeMediaQuery_ = window.matchMedia(\n          /** @type {string} */ (this.Constant_.MAX_WIDTH));\n      this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n      this.screenSizeHandler_();\n\n      // Initialize tabs, if any.\n      if (this.header_ && this.tabBar_) {\n        this.element_.classList.add(this.CssClasses_.HAS_TABS);\n\n        var tabContainer = document.createElement('div');\n        tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n        this.header_.insertBefore(tabContainer, this.tabBar_);\n        this.header_.removeChild(this.tabBar_);\n\n        var leftButton = document.createElement('div');\n        leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n        leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n        var leftButtonIcon = document.createElement('i');\n        leftButtonIcon.classList.add(this.CssClasses_.ICON);\n        leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\n        leftButton.appendChild(leftButtonIcon);\n        leftButton.addEventListener('click', function() {\n          this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\n        }.bind(this));\n\n        var rightButton = document.createElement('div');\n        rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n        rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n        var rightButtonIcon = document.createElement('i');\n        rightButtonIcon.classList.add(this.CssClasses_.ICON);\n        rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\n        rightButton.appendChild(rightButtonIcon);\n        rightButton.addEventListener('click', function() {\n          this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\n        }.bind(this));\n\n        tabContainer.appendChild(leftButton);\n        tabContainer.appendChild(this.tabBar_);\n        tabContainer.appendChild(rightButton);\n\n        // Add and remove tab buttons depending on scroll position and total\n        // window size.\n        var tabUpdateHandler = function() {\n          if (this.tabBar_.scrollLeft > 0) {\n            leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\n          } else {\n            leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n          }\n\n          if (this.tabBar_.scrollLeft <\n              this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n            rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\n          } else {\n            rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n          }\n        }.bind(this);\n\n        this.tabBar_.addEventListener('scroll', tabUpdateHandler);\n        tabUpdateHandler();\n\n        // Update tabs when the window resizes.\n        var windowResizeHandler = function() {\n          // Use timeouts to make sure it doesn't happen too often.\n          if (this.resizeTimeoutId_) {\n            clearTimeout(this.resizeTimeoutId_);\n          }\n          this.resizeTimeoutId_ = setTimeout(function() {\n            tabUpdateHandler();\n            this.resizeTimeoutId_ = null;\n          }.bind(this), /** @type {number} */ (this.Constant_.RESIZE_TIMEOUT));\n        }.bind(this);\n\n        window.addEventListener('resize', windowResizeHandler);\n\n        if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n          this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        }\n\n        // Select element tabs, document panels\n        var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n        var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n\n        // Create new tabs for each tab element\n        for (var i = 0; i < tabs.length; i++) {\n          new MaterialLayoutTab(tabs[i], tabs, panels, this);\n        }\n      }\n\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  /**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {HTMLElement} tab The HTML element for the tab.\n   * @param {!Array<HTMLElement>} tabs Array with HTML elements for all tabs.\n   * @param {!Array<HTMLElement>} panels Array with HTML elements for all panels.\n   * @param {MaterialLayout} layout The MaterialLayout object that owns the tab.\n   */\n  function MaterialLayoutTab(tab, tabs, panels, layout) {\n\n    /**\n     * Auxiliary method to programmatically select a tab in the UI.\n     */\n    function selectTab() {\n      var href = tab.href.split('#')[1];\n      var panel = layout.content_.querySelector('#' + href);\n      layout.resetTabState_(tabs);\n      layout.resetPanelState_(panels);\n      tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n      panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n    }\n\n    if (layout.tabBar_.classList.contains(\n        layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n      var ripple = document.createElement('span');\n      ripple.classList.add(layout.CssClasses_.RIPPLE);\n      rippleContainer.appendChild(ripple);\n      tab.appendChild(rippleContainer);\n    }\n\n    tab.addEventListener('click', function(e) {\n      if (tab.getAttribute('href').charAt(0) === '#') {\n        e.preventDefault();\n        selectTab();\n      }\n    });\n\n    tab.show = selectTab;\n\n  }\n  window['MaterialLayoutTab'] = MaterialLayoutTab;\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialLayout,\n    classAsString: 'MaterialLayout',\n    cssClass: 'mdl-js-layout'\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Data Table Card MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\n  var MaterialDataTable = function MaterialDataTable(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n\n  window['MaterialDataTable'] = MaterialDataTable;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialDataTable.prototype.Constant_ = {\n    // None at the moment.\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialDataTable.prototype.CssClasses_ = {\n    DATA_TABLE: 'mdl-data-table',\n    SELECTABLE: 'mdl-data-table--selectable',\n    SELECT_ELEMENT: 'mdl-data-table__select',\n    IS_SELECTED: 'is-selected',\n    IS_UPGRADED: 'is-upgraded'\n  };\n\n  /**\n   * Generates and returns a function that toggles the selection state of a\n   * single row (or multiple rows).\n   *\n   * @param {Element} checkbox Checkbox that toggles the selection state.\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\n  MaterialDataTable.prototype.selectRow_ = function(checkbox, row, opt_rows) {\n    if (row) {\n      return function() {\n        if (checkbox.checked) {\n          row.classList.add(this.CssClasses_.IS_SELECTED);\n        } else {\n          row.classList.remove(this.CssClasses_.IS_SELECTED);\n        }\n      }.bind(this);\n    }\n\n    if (opt_rows) {\n      return function() {\n        var i;\n        var el;\n        if (checkbox.checked) {\n          for (i = 0; i < opt_rows.length; i++) {\n            el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n            el['MaterialCheckbox'].check();\n            opt_rows[i].classList.add(this.CssClasses_.IS_SELECTED);\n          }\n        } else {\n          for (i = 0; i < opt_rows.length; i++) {\n            el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n            el['MaterialCheckbox'].uncheck();\n            opt_rows[i].classList.remove(this.CssClasses_.IS_SELECTED);\n          }\n        }\n      }.bind(this);\n    }\n  };\n\n  /**\n   * Creates a checkbox for a single or or multiple rows and hooks up the\n   * event handling.\n   *\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\n  MaterialDataTable.prototype.createCheckbox_ = function(row, opt_rows) {\n    var label = document.createElement('label');\n    var labelClasses = [\n      'mdl-checkbox',\n      'mdl-js-checkbox',\n      'mdl-js-ripple-effect',\n      this.CssClasses_.SELECT_ELEMENT\n    ];\n    label.className = labelClasses.join(' ');\n    var checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('mdl-checkbox__input');\n\n    if (row) {\n      checkbox.checked = row.classList.contains(this.CssClasses_.IS_SELECTED);\n      checkbox.addEventListener('change', this.selectRow_(checkbox, row));\n    } else if (opt_rows) {\n      checkbox.addEventListener('change', this.selectRow_(checkbox, null, opt_rows));\n    }\n\n    label.appendChild(checkbox);\n    componentHandler.upgradeElement(label, 'MaterialCheckbox');\n    return label;\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialDataTable.prototype.init = function() {\n    if (this.element_) {\n      var firstHeader = this.element_.querySelector('th');\n      var bodyRows = Array.prototype.slice.call(this.element_.querySelectorAll('tbody tr'));\n      var footRows = Array.prototype.slice.call(this.element_.querySelectorAll('tfoot tr'));\n      var rows = bodyRows.concat(footRows);\n\n      if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {\n        var th = document.createElement('th');\n        var headerCheckbox = this.createCheckbox_(null, rows);\n        th.appendChild(headerCheckbox);\n        firstHeader.parentElement.insertBefore(th, firstHeader);\n\n        for (var i = 0; i < rows.length; i++) {\n          var firstCell = rows[i].querySelector('td');\n          if (firstCell) {\n            var td = document.createElement('td');\n            if (rows[i].parentNode.nodeName.toUpperCase() === 'TBODY') {\n              var rowCheckbox = this.createCheckbox_(rows[i]);\n              td.appendChild(rowCheckbox);\n            }\n            rows[i].insertBefore(td, firstCell);\n          }\n        }\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialDataTable,\n    classAsString: 'MaterialDataTable',\n    cssClass: 'mdl-js-data-table'\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Ripple MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialRipple = function MaterialRipple(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialRipple'] = MaterialRipple;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n  };\n\n  /**\n   * Handle mouse / finger down on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRipple.prototype.downHandler_ = function(event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n      var rect = this.element_.getBoundingClientRect();\n      this.boundHeight = rect.height;\n      this.boundWidth = rect.width;\n      this.rippleSize_ = Math.sqrt(rect.width * rect.width +\n          rect.height * rect.height) * 2 + 2;\n      this.rippleElement_.style.width = this.rippleSize_ + 'px';\n      this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n      this.ignoringMouseDown_ = false;\n    } else {\n      if (event.type === 'touchstart') {\n        this.ignoringMouseDown_ = true;\n      }\n      var frameCount = this.getFrameCount();\n      if (frameCount > 0) {\n        return;\n      }\n      this.setFrameCount(1);\n      var bound = event.currentTarget.getBoundingClientRect();\n      var x;\n      var y;\n      // Check if we are handling a keyboard click.\n      if (event.clientX === 0 && event.clientY === 0) {\n        x = Math.round(bound.width / 2);\n        y = Math.round(bound.height / 2);\n      } else {\n        var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n        var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n        x = Math.round(clientX - bound.left);\n        y = Math.round(clientY - bound.top);\n      }\n      this.setRippleXY(x, y);\n      this.setRippleStyles(true);\n      window.requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n  };\n\n  /**\n   * Handle mouse / finger up on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRipple.prototype.upHandler_ = function(event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n      // Allow a repaint to occur before removing this class, so the animation\n      // shows for tap events, which seem to trigger a mouseup too soon after\n      // mousedown.\n      window.setTimeout(function() {\n        this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n      }.bind(this), 0);\n    }\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialRipple.prototype.init = function() {\n    if (this.element_) {\n      var recentering =\n          this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n      if (!this.element_.classList.contains(\n          this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n        this.rippleElement_ = this.element_.querySelector('.' +\n            this.CssClasses_.RIPPLE);\n        this.frameCount_ = 0;\n        this.rippleSize_ = 0;\n        this.x_ = 0;\n        this.y_ = 0;\n\n        // Touch start produces a compat mouse down event, which would cause a\n        // second ripples. To avoid that, we use this property to ignore the first\n        // mouse down after a touch start.\n        this.ignoringMouseDown_ = false;\n\n        this.boundDownHandler = this.downHandler_.bind(this);\n        this.element_.addEventListener('mousedown',\n          this.boundDownHandler);\n        this.element_.addEventListener('touchstart',\n            this.boundDownHandler);\n\n        this.boundUpHandler = this.upHandler_.bind(this);\n        this.element_.addEventListener('mouseup', this.boundUpHandler);\n        this.element_.addEventListener('mouseleave', this.boundUpHandler);\n        this.element_.addEventListener('touchend', this.boundUpHandler);\n        this.element_.addEventListener('blur', this.boundUpHandler);\n\n        /**\n         * Getter for frameCount_.\n         * @return {number} the frame count.\n         */\n        this.getFrameCount = function() {\n          return this.frameCount_;\n        };\n\n        /**\n         * Setter for frameCount_.\n         * @param {number} fC the frame count.\n         */\n        this.setFrameCount = function(fC) {\n          this.frameCount_ = fC;\n        };\n\n        /**\n         * Getter for rippleElement_.\n         * @return {Element} the ripple element.\n         */\n        this.getRippleElement = function() {\n          return this.rippleElement_;\n        };\n\n        /**\n         * Sets the ripple X and Y coordinates.\n         * @param  {number} newX the new X coordinate\n         * @param  {number} newY the new Y coordinate\n         */\n        this.setRippleXY = function(newX, newY) {\n          this.x_ = newX;\n          this.y_ = newY;\n        };\n\n        /**\n         * Sets the ripple styles.\n         * @param  {boolean} start whether or not this is the start frame.\n         */\n        this.setRippleStyles = function(start) {\n          if (this.rippleElement_ !== null) {\n            var transformString;\n            var scale;\n            var size;\n            var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n\n            if (start) {\n              scale = this.Constant_.INITIAL_SCALE;\n              size = this.Constant_.INITIAL_SIZE;\n            } else {\n              scale = this.Constant_.FINAL_SCALE;\n              size = this.rippleSize_ + 'px';\n              if (recentering) {\n                offset = 'translate(' + this.boundWidth / 2 + 'px, ' +\n                  this.boundHeight / 2 + 'px)';\n              }\n            }\n\n            transformString = 'translate(-50%, -50%) ' + offset + scale;\n\n            this.rippleElement_.style.webkitTransform = transformString;\n            this.rippleElement_.style.msTransform = transformString;\n            this.rippleElement_.style.transform = transformString;\n\n            if (start) {\n              this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n            } else {\n              this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n            }\n          }\n        };\n\n        /**\n         * Handles an animation frame.\n         */\n        this.animFrameHandler = function() {\n          if (this.frameCount_-- > 0) {\n            window.requestAnimationFrame(this.animFrameHandler.bind(this));\n          } else {\n            this.setRippleStyles(false);\n          }\n        };\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialRipple,\n    classAsString: 'MaterialRipple',\n    cssClass: 'mdl-js-ripple-effect',\n    widget: false\n  });\n})();\n","/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // Check to see if there's an updated version of service-worker.js with\n      // new files to cache:\n      // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-registration-update-method\n      if (typeof registration.update === 'function') {\n        registration.update();\n      }\n\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  // Your custom JavaScript goes here\n})();\n"],"sourceRoot":"/source/"}